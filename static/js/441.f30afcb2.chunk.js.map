{"version":3,"file":"static/js/441.f30afcb2.chunk.js","mappings":"mOAGe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,OACE,iCACE,wBAJe,CAAC,OAAQ,WAKVE,KAAI,SAACC,EAAMC,GACrB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCL,EAArC,YAAgDG,EAAKG,eADzD,SAGGH,KAJIC,EAQZ,OAEH,SAAC,KAAD,MAGL,C,aCpBc,SAASG,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQV,GAAYC,EAAAA,EAAAA,MAAZD,QAEFW,GAAcC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,MAAcC,OA2BzC,IAzBAC,EAAAA,EAAAA,YAAU,WACR,KACmBC,EAAAA,EAAAA,IAAgBhB,GACxBiB,MAAK,SAAAC,GACZ,IACEC,EAMED,EANFC,MACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,YACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,OACAC,EACEN,EADFM,aAGFd,EAAgB,CACdS,MAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,aAAAA,GAEH,GACe,CAAhB,MAAOC,GAAS,CACnB,GAAE,CAACzB,IAEAS,EAAc,CAChB,IAAQU,EACNV,EADMU,MAAOC,EACbX,EADaW,SAAUC,EACvBZ,EADuBY,YAAaC,EACpCb,EADoCa,aAAcC,EAClDd,EADkDc,OAAQC,EAC1Df,EAD0De,aAG5D,OACE,gCACGb,EAAYe,UACX,SAAC,KAAD,CACErB,GAAIM,EAAYe,QAAQC,SACxBb,MAAOH,EAAYe,QAAQE,OAF7B,6BAOF,4BACE,gBACEC,IAAG,yCAAoCR,GACvCS,IAAKX,KAEP,4BACE,kCAAQA,EAAR,aAAkBK,EAAaO,MAAM,EAAG,GAAxC,QACA,8CAAmC,GAAfT,GAAmBU,QAAQ,GAA/C,QACA,sCACA,uBAAIZ,KACJ,oCACA,uBAAIG,EAAOrB,KAAI,gBAAG+B,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,iBAGnB,mDACA,SAAClC,EAAD,MAGL,CAED,OAAO,IACR,C","sources":["components/MovieDetails/MovieDetails.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import { Link, Outlet, useParams } from 'react-router-dom';\n\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const NAVIGATION = ['Cast', 'Reviews'];\n\n  return (\n    <>\n      <ul>\n        {NAVIGATION.map((page, index) => {\n          return (\n            <li key={index}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}\n              >\n                {page}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n","import { getMovieDetails } from '../../api/index';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nexport default function MoviesDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  const locationRef = useRef(useLocation().state);\n\n  useEffect(() => {\n    try {\n      const response = getMovieDetails(movieId);\n      response.then(data => {\n        const {\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        } = data;\n\n        setMovieDetails({\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        });\n      });\n    } catch (error) {}\n  }, [movieId]);\n\n  if (movieDetails) {\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      movieDetails;\n\n    return (\n      <>\n        {locationRef.current && (\n          <Link\n            to={locationRef.current.location}\n            state={locationRef.current.search}\n          >\n            &#8592; Go back\n          </Link>\n        )}\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n          />\n          <div>\n            <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n            <p>{`User score: ${(vote_average * 10).toFixed(2)}%`}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(({ name }) => `${name} `)}</p>\n          </div>\n        </div>\n        <p>Additional information</p>\n        <MovieDetails />\n      </>\n    );\n  }\n\n  return null;\n}\n"],"names":["MovieDetails","movieId","useParams","map","page","index","to","toLowerCase","MoviesDetails","useState","movieDetails","setMovieDetails","locationRef","useRef","useLocation","state","useEffect","getMovieDetails","then","data","title","overview","poster_path","vote_average","genres","release_date","error","current","location","search","src","alt","slice","toFixed","name"],"sourceRoot":""}